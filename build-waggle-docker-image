#!/bin/bash


print_usage() {
  echo "Usage: build-waggle-docker-images [OPTIONS]"
  echo "OPTIONS"
  line="--help                         "
  line+="show this usage message"
  echo "  $line"
  line="-n |--node-controller        "
  line+="build the Node Controller Waggle Docker image"
  echo "  $line"
  line="-e |--edge-processor        "
  line+="build the Edge Processor Waggle Docker image"
  echo "  $line"
  line="-v |--version=<version>        "
  line+="show this usage message"
  echo "  $line"
  line="-r |--revision=<revision>      "
  line+="build revision <revision> of the specified version"
  echo "  $line"
  line="-d |--deployment=<deployment>      "
  line+="configure the image according to deployment <deployment>"
  echo "  $line"
  line="-b |--branch=<branch>      "
  line+="clone repositories from branch <branch>"
  echo "  $line"
  line="-h |--server-host=<server_host>      "
  line+="configure the Beehive server to be <server_host>"
  echo "  $line"
}

node_controller=0
edge_processor=0
version=''
revision=0
deployment='Public'
branch='master'
server_host='beehive1.mcs.anl.gov'
while [[ $# -gt 0 ]]; do
  key="$1"
  case $key in
    --help)
      print_usage
      exit
      ;;
    -n)
      node_controller=1
      shift
      ;;
    --node-controller=*)
      node_controller=1
      ;;
    -e)
      edge_processor=1
      shift
      ;;
    --edge-processor=*)
      edge_processor=1
      ;;
    -v)
      version="$2"
      shift
      ;;
    --version=*)
      version="${key#*=}"
      ;;
    -r)
      revision="$2"
      shift
      ;;
    --revision=*)
      revision="${key#*=}"
      ;;
    -d)
      deployment="$2"
      shift
      ;;
    --deployment=*)
      deployment="${key#*=}"
      ;;
    -b)
      branch="$2"
      shift
      ;;
    --branch=*)
      branch="${key#*=}"
      ;;
    -h)
      server_host="$2"
      shift
      ;;
    --server-host=*)
      server_host="${key#*=}"
      ;;
      *)
      ;;
  esac
  shift
done

echo $server_host | grep '[a-z]'
if [ $? -eq 0 ]; then
  server_host=$(dig +short $server_host)
fi

declare -r script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

if [ "x$version" == "x" ]; then
  # query DB for latest version and revision if not specified
  cd ${script_dir}/config
  version_revision=$($script_dir/config/get-latest-build)
  version_revision_tuple=(${version_revision//-/ })
  version=${version_revision_tuple[0]}
fi

image_version=$version
if [ $revision -ne 0 ]; then
  image_version=${version}-${revision}
fi

declare -r architecture=x86_64



cd $script_dir

if [ $node_controller -eq 1 ]; then
  declare -r nc_base_date=$($script_dir/config/get-builds \
    | grep -A 2 "$version ($revision) $architecture" | tail -1 | awk '{print $5}')
  declare -r nc_dependencies=$($script_dir/config/get-build-dependencies -n \
    --version=$version --revision=$revision --architecture=$architecture)
  echo "Building Waggle Node Controller base image version $image_version"
  time docker build -t waggle-node-controller:$image_version -f dockerfiles/waggle-node-controller \
       --build-arg base-version=$nc_base_date \
       --build-arg branch=branch \
       --build-arg server_host=$server_host .
fi

if [ $edge_processor -eq 1 ]; then
  declare -r ep_base_date=$($script_dir/config/get-builds \
    | grep -A 3 "$version ($revision) $architecture" | tail -1 | awk '{print $5}')
  declare -r ep_dependencies=$($script_dir/config/get-build-dependencies -e \
    --version=$version --revision=$revision --architecture=$architecture)
  echo "Building Waggle Edge Processor base image version $image_version"
  time docker build -t waggle-edge-processor:$image_version -f dockerfiles/waggle-edge-processor \
       --build-arg base-version=$ep_base_date \
       --build-arg branch=branch \
       --build-arg server_host=$server_host .
fi
