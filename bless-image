#!/bin/bash

# By default 1) install the registration key, 2) install Edge Processor key, 3) install the wvdial.conf with the AoT APN,
# 4) disable sudo, and 5) set the AoT root password.
#
# Disable any of these actions except 1 and 2 with approprite options


PRINT_USAGE=0
DISABLE_WVDIAL=0
DISABLE_APN=0
ENABLE_SUDO=0
DISABLE_ROOT_PASS=0
CLEAN_UP=0
KEY_PATH='/root/id_rsa_waggle_aot_config'
MOUNT_POINT=''
while [[ $# -gt 0 ]]; do
  opt="$1"
  arg="$2"
  # echo "Key: $key"
  case $opt in
    --help)
      PRINT_USAGE=1
      ;;
    -w|--disable-wvdial)
      DISABLE_WVDIAL=1
      ;;
    -a|--disable-apn)
      DISABLE_APN=1
      ;;
    -s|--enable-sudo)
      ENABLE_SUDO=1
      ;;
    -r|--disable-root-pass)
      DISABLE_ROOT_PASS=1
      ;;
    -c|--clean-up)
      CLEAN_UP=1
      ;;
    -k)
      KEY_PATH="$arg"
      shift
      ;;
    --key-path=*)
      KEY_PATH="${opt#*=}"
      ;;
      *)
        MOUNT_POINT="$opt"
      ;;
  esac
  shift
done

# Detect the Odroid model. This yields either ODROIDC or ODROID-XU3.
declare -r ODROID_MODEL=$(cat /proc/cpuinfo | grep Hardware | grep -o "[^ ]*$")

declare -r USAGE_MESSAGE="Usage: bless-image [--help] [-w|--disable-wvdial] [-a|--disable-apn] [-s|--enable-sudo] [-r|--disable-root-pass] [-c|--clean-up] [-k <key-path>|--key-path=<key-path>] <mount-point>"
if [ ${PRINT_USAGE} -eq 1 ]; then
  echo
  echo ${USAGE_MESSAGE}
  echo
  exit 0
fi

if [ "x${MOUNT_POINT}" == "x" ]; then
  echo
  echo "Error: no mount point specified"
  echo ${USAGE_MESSAGE}
  echo
  exit 1
fi

if [ ! -e 'private_config' ]; then
  echo "Attempting to clone the private_config repository..."

  if [ ! -e ${KEY_PATH} ]; then
    echo
    echo "Error: no such key path ${KEY_PATH}"
    echo
    exit 2
  fi

  #sets SSH_AGENT_PID
  eval "$(ssh-agent -s)"
  sleep 1
  ssh-add ${KEY_PATH}

  ssh -oBatchMode=yes -T git@github.com 2>&1 | grep 'successfully authenticated'
  exit_code=$?
  if [ $exit_code -ne 0 ]; then
    echo
    echo "Error: unable to authenticate to GitHub"
    echo
    kill -9 ${SSH_AGENT_PID}
    exit 3
  fi
  git clone git@github.com:waggle-sensor/private_config.git

  kill -9 ${SSH_AGENT_PID}
fi


if [ "${ODROID_MODEL}" == "ODROIDC" ]; then
  # install registration key
  echo "Installing node registration key..."
  cp private_config/id_rsa_waggle_aot_registration ${MOUNT_POINT}/root/id_rsa_waggle_aot_registration
  chmod 400 ${MOUNT_POINT}/root/id_rsa_waggle_aot_registration

  # install Edge Processor key
  echo "Installing Edge Processor key..."
  cp private_config/id_rsa_waggle_aot_edge_processor ${MOUNT_POINT}/usr/lib/waggle/SSL/edge_processor/id_rsa_waggle_aot_edge_processor
  chmod 400 ${MOUNT_POINT}/usr/lib/waggle/SSL/edge_processor/id_rsa_waggle_aot_edge_processor

  # install wvdial.conf
  if [ ${DISABLE_WVDIAL} -eq 0 ]; then
    echo "Installing AoT wvdial.conf..."
    cp private_config/wvdial.conf ${MOUNT_POINT}/etc/wvdial.conf
    chmod 400 ${MOUNT_POINT}/etc/wvdial.conf
  fi
fi

# enable sudo
if [ ${ENABLE_SUDO} -eq 1 ]; then
  echo "Enabling sudo for the 'waggle' user..."
  sed -i -e "s/^sudo:x:27:.*/sudo:x:27:waggle/" ${MOUNT_POINT}/etc/group
fi

# set AoT root password
if [ ${DISABLE_ROOT_PASS} -eq 0 ]; then
  echo "Setting the AoT root password..."
  aot_root_shadow_entry=$(cat private_config/root_shadow)
  sed -i -e "s/^root:..*/${aot_root_shadow_entry}/" ${MOUNT_POINT}/etc/shadow
fi


if [ ${CLEAN_UP} -eq 1 ]; then
  rm -rf private_config
fi
