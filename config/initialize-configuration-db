#!/usr/bin/python3

import os
import os.path
import tinydb

import waggle.build as build

def main():
  script_dir = os.path.dirname(os.path.abspath(__file__))


  '''
  declare -r base_apt_packages=("htop" "iotop" "iftop" "bwm-ng" "screen" "git" "python-dev" "python-pip"
                                "python3-dev" "python3-pip" "dosfstools" "parted" "bash-completion"
                                "v4l-utils" "network-manager" "usbutils" "nano" "stress-ng" "rabbitmq-server"
                                "python-psutil" "python3-psutil")
  declare -r nc_apt_packages=(" wvdial" "autossh" "bossa-cli" "curl" "python3-zmq")
  declare -r ep_apt_packages=(" fswebcam" "alsa-utils" "portaudio19-dev" "libavcodec-ffmpeg56" "libavformat-ffmpeg56" "libavutil-ffmpeg54" "libc6" "libcairo2" "libgdk-pixbuf2.0-0" "libglib2.0-0" "libgtk-3-0" "libpng12-0" "libstdc++6" "libswscale-ffmpeg3" "zlib1g")


  # Define Python 2 package dependencies
  declare -r base_python2_packages=("tabulate" "pika")
  declare -r nc_python2_packages=(" crcmod" "pyserial")
  declare -r ep_python2_packages=(" numpy")

  # Define Python 3 package dependencies
  declare -r base_python3_packages=("tabulate" "pika")
  declare -r nc_python3_packages=(" crcmod" "pyserial" "netifaces" "pyzmq" "pyinotify" "pynmea2")
  declare -r ep_python3_packages=(" pyaudio" "numpy")

  # Define Debian package dependencies
  declare -r arch=`uname -m`
  declare -r base_deb_packages=
  declare -r nc_deb_packages=
  #declare -r ep_deb_packages=(" OpenCV-unknown-${arch}-dev.deb" "OpenCV-unknown-${arch}-main.deb" "OpenCV-unknown-${arch}-samples.deb" "OpenCV-unknown-${arch}-libs.deb" "OpenCV-unknown-${arch}-python.deb")
  declare -r ep_deb_packages=(" OpenCV-dev" "OpenCV-main" "OpenCV-samples" "OpenCV-libs" "OpenCV-python")
  '''

  build_config = build.Configuration()

  # add APT dependency type and dependencies
  dep_type_name = 'apt'
  if build_config.get_dependency_type_id(dep_type_name) == None:
    build_config.add_dependency_type(dep_type_name)

  dep_type = build_config.get_dependency_type_id(dep_type_name)
  dep_names = ["htop", "iotop", "iftop", "bwm-ng", "screen", "git", "python-dev", "python-pip",
               "python3-dev", "python3-pip", "dosfstools", "parted", "bash-completion", "v4l-utils",
               "network-manager", "usbutils", "nano", "stress-ng", "rabbitmq-server", "python-psutil",
               "python3-psutil", "wvdial", "autossh", "bossa-cli", "curl", "python3-zmq",
               "fswebcam", "alsa-utils", "portaudio19-dev", "libavcodec-ffmpeg56",
               "libavformat-ffmpeg56", "libavutil-ffmpeg54", "libc6", "libcairo2", "libgdk-pixbuf2.0-0",
               "libglib2.0-0", "libgtk-3-0", "libpng12-0", "libstdc++6", "libswscale-ffmpeg3", "zlib1g"]

  for dep_name in dep_names:
    if build_config.get_dependency_id(dep_name, dep_type) == None:
      build_config.add_dependency(dep_name, dep_type)

  # add python 2 dependency type and dependencies
  dep_type_name = 'python2'
  if build_config.get_dependency_type_id(dep_type_name) == None:
    build_config.add_dependency_type(dep_type_name)

  # add python 3 dependency type and dependencies
  dep_type_name = 'python3'
  if build_config.get_dependency_type_id(dep_type_name) == None:
    build_config.add_dependency_type(dep_type_name)

  # add standalone deb package dependency type and dependencies
  dep_type_name = 'deb'
  if build_config.get_dependency_type_id(dep_type_name) == None:
    build_config.add_dependency_type(dep_type_name)

  dep_types = build_config.get_dependency_types()
  for dep_type in dep_types:
    name = dep_type['name']
    print('{} {}'.format(build_config.get_dependency_type_id(name), name))

  deps = build_config.get_dependencies()
  for dep in deps:
    name = dep['name']
    type_id = dep['type']
    dep_type = build_config.get_dependency_type(type_id)['name']
    print('{} {} {}'.format(build_config.get_dependency_id(name, type_id), name, dep_type))

if __name__ == '__main__':
  main()
